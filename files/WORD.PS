%!PS-Adobe-2.0 ExitServer
%%Title: Microsoft Word Driver Prolog
%%Creator: Microsoft
%%CreationDate: Fri Aug 18 1988
%%BeginDocument: Microsoft Word 5.0 0
%%msinifile: POSTSCRP
%%EndComments
%%BeginExitServer: 0
 userdict /msinifile known 
 {msinifile (POSTSCRP) eq {stop} if} if
 serverdict begin 0 exitserver
 userdict /msorigstate known {msorigstate restore} if
 save /msorigstate exch def
 /msinifile (POSTSCRP) def
%%EndExitServer

%%BeginFont: mslinedraw
/mslinedraw 25 dict def
/PSl {msdict begin /ptop 612 def /sw 0 def
 /ftsz 12 def /smode 0 def /STh -3.6 def /fs 0 def /offset 0 def fonttable 1 get fontset E 90 rotate 0 -612 translate save statusdict begin /waittimeout 360 def end} def
/PSp {msdict begin /ptop 792 def /sw 0 def
 /ftsz 12 def /smode 0 def /STh -3.6 def /fs 0 def /offset 0 def fonttable 1 get fontset E save statusdict begin /waittimeout 360 def end} def
mslinedraw begin
/FontType 3 def
/FontMatrix [1.0 30.0 div 0 0 1.0 30.0 div 0 0] def
/FontBBox [0 -8 18 30] def
/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding 45 [
 /sp   /sh   /sh /light /med /dark
 /sv   /srj  /sdjr /dsjr /sdtr /dstr /djr  /dv
 /dtr  /dbr  /sdbr /dsbr /str  /sbl  /sjb  /sjt
 /sjl  /sh   /sjc  /sdjl /dsjl /dbl  /dtl  /djb
 /djt  /djl  /dh   /djc  /dsjb /sdjb /dsjt /sdjt
 /sdbl /dsbl /dstl /sdtl  /sdjc /dsjc /sbr  /stl
 /black /bb /bl /br /bt] putinterval

/a {moveto lineto stroke} bind def
/b {moveto lineto lineto stroke} bind def
/c {moveto 9 7 lineto stroke} bind def
/d {moveto lineto lineto} bind def
/e {lineto closepath fill} bind def
/f {7 30 7 9 0 9 b} def
/g {12 30 12 9 18 9 b} def
/h {7 -8 7 5 0 5 b} def
/i {12 -8 12 5 18 5 b} def
/j {0 7 18 7 a} def
/k {9 22 9 -8 a} def
/l {0 5 18 5 a 0 9 18 9 a} def
/m {7 22 7 -8 a 12 22 12 -8 a} def
/n {0 -8 18 -8 18 22 d 0 22 e} def

/CharProcs 55 dict def
CharProcs begin
/.notdef {} def
/sp { 1 1 moveto } def
/sv {k} def
/srj {k 0 7 c} def
/sdjr {k 0 5 9 5 a 0 9 9 9 a} def
/dsjr {m 0 7 7 7 a} def
/sdtr {0 7 12 7 12 -8 b 7 7 7 -8 a} def
/dstr {0 9 9 9 9 -8 b 0 5 9 5 a} def
/djr {f h 12 -8 12 22 a} def
/dv {m} def
/dtr {h 0 9 12 9 12 -8 b} def
/dbr {f  0 5 12 5 12 30 b} def
/sdbr {0 7 12 7 12 30 b 7 7 7 30 a} def
/dsbr {0 5 9 5 9 30 b 0 9 9 9 a} def
/str {0 7 9 7 9 -8 b} def
/sbl {9 30 9 7 18 7 b} def
/sjb {j 9 30 c} def
/sjt {j 9 -8 c} def
/sjl {k 18 7 c} def
/sh {j} def
/sjc {j k} def
/sdjl {k 9 9 18 9 a 9 5 18 5 a} def
/dsjl {m 12 7 18 7 a} def
/dbl {g 7 30 7 5 18 5 b} def
/dtl {i 7 -8 7 9 18 9 b} def
/djb {f g 0 5 18 5 a} def
/djt {h i 0 9 18 9 a} def
/djl {g i 7 -8 7 22 a} def
/dh {l} def
/djc {f g h i} def
/dsjb {l 9 30 9 9 a} def
/sdjb {j 7 7 7 30 a 12 7 12 30 a} def
/dsjt {l 9 -8 9 5 a} def
/sdjt {j 7 7 7 -8 a 12 7 12 -8 a} def
/sdbl {7 30 7 7 18 7 b 12 30 12 7 a} def
/dsbl {9 30 9 5 18 5 b 9 9 18 9 a} def
/dstl {9 -8 9 9 18 9 b 9 5 18 5 a} def
/sdtl {7 -8 7 7 18 7 b 12 -8 12 7 a} def
/sdjc {m j} def
/dsjc {l k} def
/sbr {0 7 9 7 9 30 b} def
/stl {9 -8 9 7 18 7 b} def
/light {0.90 setgray n} def
/med {0.60 setgray n} def
/dark {0.30 setgray n} def
/black {n} def
/bt {0 7 18 7 18 22 d 0 22 e} def
/bb {0 -8 18 -8 18 7 d 0 7 e} def
/bl {0 -8 9 -8 9 22 d 0 22 e} def
/br {9 -8 18 -8 18 22 d 9 22 e} def
end %CharProcs

/BuildChar
  { fs 1 and 0 eq {1} {3} ifelse setlinewidth
    18 0 setcharwidth
    exch begin
     Encoding exch get
     CharProcs exch get
     exec
    end
  } def
end %mslinedraw
%%EndFont

%%BeginProcSet: msdict 1.0 0
/msdict 100 dict def
FontDirectory /LineDraw known not
 {/LineDraw mslinedraw definefont pop} if
msdict begin
/SLL {/LL def} def
/P {exch msu exch msu neg ptop add moveto} bind def
/S {sw 0 32 4 -1 roll widthshow} bind def
/C {1 string dup 0 4 -1 roll put S} bind def
/J {msu ( ) stringwidth pop sub /sw exch def} bind def
/PE {showpage ptop exch restore save exch /ptop exch def} bind def
/SFL {msu /ptop exch def} bind def
%%BeginModelCheck
 statusdict begin
 product (OmniLaser) eq
{
end
/B1 {statusdict begin 0 setpapertray end} def
/B2 {statusdict begin 1 setpapertray end} def
}{
end
/B1 {statusdict begin 1 setpapertray end} def
/B2 {statusdict begin 2 setpapertray end} def
} ifelse
%%EndModelCheck
/MB {statusdict begin /manualfeed true store end} def
/ME {statusdict begin /manualfeed false store end} def
/B {fs 2 and 0 eq {Bft} {BIft} ifelse
 ftsz scalefont setfont fs 1 or /fs exch def} bind def
/E {Eft ftsz scalefont setfont /fs 0 def} bind def
/I {fs 1 and 0 eq {Ift} {BIft} ifelse
 ftsz scalefont setfont fs 2 or /fs exch def} bind def
/BI {BIft ftsz scalefont setfont fs 
 2 or 1 or /fs exch def} bind def
/LU {currentpoint /uy exch def /ux exch def 1 ssm} bind def
/LD {currentpoint /uy exch def /ux exch def 2 ssm} bind def
/LS {currentpoint /uy exch def /ux exch def 4 ssm} bind def
/LL {currentpoint /uy exch def /ux exch def /ldmode exch def 8 ssm} bind def
/LE {smode 1 and 0 ne {false (_) ul} if
      smode 2 and 0 ne {true (_) ul} if
      smode 4 and 0 ne {false (\352) ul} if
      smode 8 and 0 ne {ux uy ldot pop pop} if
  not smode and /smode exch def} bind def
/BD {STh ssc} def
/BU {STh neg ssc} def
/BN {0 ssy neg rmoveto} def
/F {/ftsz exch def (-) stringwidth pop 2 div neg /STh exch def
 /ftcd exch def 
 0 2 fonttable length 1 sub
   {dup fonttable exch get ftcd eq
     {1 add fonttable exch get fontset exit}{pop}ifelse
   }for
 E} bind def
/msfindfont {dup FontDirectory exch known not {pop /Courier} if findfont} def
/fontset {dup 0 get msfindfont /Eft exch def
          dup 1 get msfindfont /Bft exch def
          dup 2 get msfindfont /Ift exch def
          3 get msfindfont /BIft exch def
         }def
/msu {20 div} def
/ssc {dup /ssy exch def 0 exch rmoveto} bind def
/ssm {dup smode or /smode exch def} bind def
/Cf {/Eft /Courier  findfont def /Bft /Courier-Bold findfont def /Ift /Courier-Oblique findfont def /BIft /Courier-BoldOblique findfont def} def
/DUL {cc true charpath pathbbox newpath exch pop 2 index 2 index moveto cx1 4 -1 roll sub dup 0 rlineto 3 1 roll exch
sub 0 exch rlineto neg 0 rlineto closepath fill} bind def
/ul {gsave /cc exch def currentpoint pop /cx1 exch def ux uy moveto DUL {grestore gsave ux uy 2.4 sub moveto DUL} if
grestore} bind def
/PSe {restore end currentfile closefile} bind def
/ldot {gsave 2 copy currentpoint /y exch def /x exch def
 newpath
 ldmode 0 eq {/offset 0 def 1 setlinewidth [1 7] 4 setdash}
 {ldmode 1 eq {[6 2] 6 setdash /offset STh def .2 setlinewidth}
 {ldmode 2 eq {[] 0 setdash /offset 1.4 def .2 setlinewidth} if}
 ifelse} ifelse
 offset sub moveto x y offset sub lineto stroke grestore} bind def
/Ccs /Courier findfont /CharStrings get def

% /OrigName /NewName vector ReEncodeSmall
/ReEncodeSmall { %def
  exch findfont begin
  currentdict dup length dict begin
    { 1 index /FID ne {def} {pop pop} ifelse } forall
    /FontName exch def
    /Encoding foreignvec def
  currentdict dup end end
  /FontName get exch definefont pop
} bind def
/Foreign { ReEncodeSmall } def

/foreignvec StandardEncoding 256 array copy def
% the following are differences from StandardEncoding.
% Sequential entries do not require indices:
0 [ 39/quotesingle 96/grave
128/Ccedilla/udieresis/eacute/acircumflex/adieresis
/agrave/aring/ccedilla/ecircumflex/edieresis
/egrave/idieresis/icircumflex/igrave/Adieresis
/Aring/Eacute/ae/AE/ocircumflex
/odieresis/ograve/ucircumflex/ugrave/ydieresis
/Odieresis/Udieresis/cent/sterling/yen/P/florin/aacute
/iacute/oacute/uacute/ntilde/Ntilde/ordfeminine
/ordmasculine/questiondown/.notdef/.notdef
/.notdef/.notdef/exclamdown/guillemotleft/guillemotright
/Aacute/Acircumflex/Agrave/Atilde/Ecircumflex/Edieresis
/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute
/Ocircumflex/Ograve/Otilde/Uacute/Ucircumflex/Ugrave
/Scaron/Ydieresis/emdash/Zcaron/.notdef/otilde/scaron/zcaron
/fraction/section/currency/quotesingle/quotedblleft
/guilsinglleft/guilsinglright/.notdef/.notdef/endash/dagger/daggerdbl
/paragraph/quotesinglbase/quotedblbase/quotedblright
/ellipsis/.notdef/grave/acute/circumflex/tilde/macron
/germandbls/breve/dotaccent/dieresis/cedilla/.notdef/hungarumlaut
/ogonek/caron/emdash/Lslash/Oslash/dotlessi/lslash/oslash
/.notdef/.notdef/.notdef/.notdef/.notdef/atilde
/.notdef/.notdef/ring/bullet/periodcentered/.notdef/.notdef
/.notdef/.notdef/.notdef
] { %forall
  dup type /nametype eq { %ifelse
    dup Ccs exch known not {pop /.notdef} if
    foreignvec 2 index 2 index put
    pop 1 add
  }{ exch pop } ifelse
} forall pop

%BeginMakeForeign
/Courier /Courier-F Foreign
/Courier-Bold /Courier-Bold-F Foreign
/Courier-Oblique /Courier-Oblique-F Foreign
/Courier-BoldOblique /Courier-BoldOblique-F Foreign
/Helvetica /Helvetica-F Foreign
/Helvetica-Bold /Helvetica-Bold-F Foreign
/Helvetica-Oblique /Helvetica-Oblique-F Foreign
/Helvetica-BoldOblique /Helvetica-BoldOblique-F Foreign
/AvantGarde-Book /AvantGarde-Book-F Foreign
/AvantGarde-Demi /AvantGarde-Demi-F Foreign
/AvantGarde-BookOblique /AvantGarde-BookOblique-F Foreign
/AvantGarde-DemiOblique /AvantGarde-DemiOblique-F Foreign
FontDirectory /Helvetica-Condensed known
{
/Helvetica-Condensed /Helvetica-Narrow-F Foreign
/Helvetica-Condensed-Bold /Helvetica-Narrow-Bold-F Foreign
/Helvetica-Condensed-Oblique /Helvetica-Narrow-Oblique-F Foreign
/Helvetica-Condensed-BoldObl /Helvetica-Narrow-BoldOblique-F Foreign
}{
/Helvetica-Narrow /Helvetica-Narrow-F Foreign
/Helvetica-Narrow-Bold /Helvetica-Narrow-Bold-F Foreign
/Helvetica-Narrow-Oblique /Helvetica-Narrow-Oblique-F Foreign
/Helvetica-Narrow-BoldOblique /Helvetica-Narrow-BoldOblique-F Foreign
} ifelse
/Bookman-Light /Bookman-Light-F Foreign
/Bookman-Demi /Bookman-Demi-F Foreign
/Bookman-LightItalic /Bookman-LightItalic-F Foreign
/Bookman-DemiItalic /Bookman-DemiItalic-F Foreign
/Times-Roman /Times-Roman-F Foreign
/Times-Bold /Times-Bold-F Foreign
/Times-Italic /Times-Italic-F Foreign
/Times-BoldItalic /Times-BoldItalic-F Foreign
/NewCenturySchlbk-Roman /NewCenturySchlbk-Roman-F Foreign
/NewCenturySchlbk-Bold /NewCenturySchlbk-Bold-F Foreign
/NewCenturySchlbk-Italic /NewCenturySchlbk-Italic-F Foreign
/NewCenturySchlbk-BoldItalic /NewCenturySchlbk-BoldItalic-F Foreign
/Palatino-Roman /Palatino-Roman-F Foreign
/Palatino-Bold /Palatino-Bold-F Foreign
/Palatino-Italic /Palatino-Italic-F Foreign
/Palatino-BoldItalic /Palatino-BoldItalic-F Foreign
/ZapfChancery-MediumItalic /ZapfChancery-MediumItalic-F Foreign
%EndMakeForeign

/fonttable
 [0 [/Courier-F /Courier-Bold-F /Courier-Oblique-F /Courier-BoldOblique-F]
 8 [/Helvetica-F /Helvetica-Bold-F /Helvetica-Oblique-F /Helvetica-BoldOblique-F]
 9 [/AvantGarde-Book-F /AvantGarde-Demi-F /AvantGarde-BookOblique-F /AvantGarde-DemiOblique-F]
 10 [/Helvetica-Narrow-F /Helvetica-Narrow-Bold-F /Helvetica-Narrow-Oblique-F /Helvetica-Narrow-BoldOblique-F]
 16 [/Bookman-Light-F /Bookman-Demi-F /Bookman-LightItalic-F /Bookman-DemiItalic-F]
 24 [/Times-Roman-F /Times-Bold-F /Times-Italic-F /Times-BoldItalic-F]
 25 [/NewCenturySchlbk-Roman-F /NewCenturySchlbk-Bold-F /NewCenturySchlbk-Italic-F /NewCenturySchlbk-BoldItalic-F]
 26 [/Palatino-Roman-F /Palatino-Bold-F /Palatino-Italic-F /Palatino-BoldItalic-F]
 50 [/ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F /ZapfChancery-MediumItalic-F]
 56 [/Symbol /Symbol /Symbol /Symbol]
 57 [/LineDraw /LineDraw /LineDraw /LineDraw]
 60 [/ZapfDingbats /ZapfDingbats /ZapfDingbats 
/ZapfDingbats] 
] def

%BeginGraphicsDefs
/M {moveto}  def
/L {lineto} def
/LH {currentpoint exch pop lineto} def
/LV {currentpoint pop exch lineto} def
/R {3 index 1 index 1 index 5 index 5 index 1 index M L L L closepath pop pop} def
/setpat {setscreen 100 div setgray} def
/setgrayed {{dup mul exch dup mul add 1 exch sub} setpat} def
/setbar {{pop} setpat} def
/setcross {{2 copy gt {pop} {exch pop} ifelse} setpat} def
/fi {1 -1 scale} def
/II1 {save count /mscount exch def} def
/II2 {userdict begin /showpage {} def /letter {} def
  /legal {} def /a4 {} def /b5 {} def
  /clear { {cleartomark count msdict /mscount get eq {exit} if} loop mark} def
   mark} def
/IT {pop restore} def
/IX {exch msu exch msu neg ptop add translate} def
/IS {div 3 1 roll div exch scale} def

save /msdictstate exch def
                                                                                                                                                                                                                                                                                                                                         